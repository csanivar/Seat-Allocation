import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.HashMap;


public class GaleShapleyAdmission {
	static String program_tokens[] = {"GE","OBC","SC","ST","GE-PD","OBC-PD","SC-PD","ST-PD"};
	static HashMap<String,VirtualProgramme> allVirtualPrograms= new HashMap<String,VirtualProgramme>();
	static HashMap<String,Candidate> allCandidates = new HashMap<String,Candidate>();
	static HashMap<String,MeritList> allRankLists  = new HashMap<String,MeritList>();
	private static boolean end = false;
	public static void main(String args[]) throws FileNotFoundException{
		for(int i=0;i<8;i++){
			MeritList tempMeritList = new MeritList();
			allRankLists.put(program_tokens[i],tempMeritList);
		}
		readPrograms();
		readChoices();
		readRankList();
		iterate();            // Iterate through all the rank lists and allot seats accordingly
	}
	
	private static void readPrograms() throws FileNotFoundException{
        BufferedReader fileReader = null;
        try
        {
            String line = "";
            fileReader = new BufferedReader(new FileReader("programs.csv"));
            line = fileReader.readLine();
            while ((line = fileReader.readLine()) != null)
            {
                String[] tokens = line.split(",");
                for(int i=0;i<program_tokens.length;i++)
                {
                	VirtualProgramme tempVPL = new VirtualProgramme();
                	tempVPL.setQuota(Integer.valueOf(tokens[i+3]));
                	tempVPL.setCategory(program_tokens[i]);
                	allVirtualPrograms.put(tokens[1]+"-"+program_tokens[i],tempVPL);
                }
            }
        }
        catch (Exception e) {
            e.printStackTrace();
        } 
	}
	private static void readChoices(){
		BufferedReader fileReader = null;
		try{
			String line ="";
			fileReader = new BufferedReader(new FileReader("choices.csv"));
            line = fileReader.readLine();
			while((line = fileReader.readLine()) != null){
				String[] tokens = line.split(",");
				Candidate tempCandidate = new Candidate();
				tempCandidate.setID(tokens[0]);
				tempCandidate.setCategory(tokens[1]);
				tempCandidate.setPDStatus(tokens[2]);
				tempCandidate.setPL(tokens[3]);
				tempCandidate.makeVPL();
			/*	for(int i=0;i<tempCandidate.virtual_pl.size();i++){
					System.out.print(tempCandidate.virtual_pl.get(i));
					System.out.print(" ");
				}
				System.out.println(); */
				allCandidates.put(tokens[0],tempCandidate);
			}
		}
		catch(Exception e){
			e.printStackTrace();
		}
	}
	private static void readRankList(){
		BufferedReader fileReader = null;
		try{
			String line ="";
			fileReader = new BufferedReader(new FileReader("ranklist.csv"));
            line = fileReader.readLine();
			while((line = fileReader.readLine()) != null){
				String[] tokens = line.split(",");
				for(int i=0;i<4;i++){
					MeritList tempMeritList = allRankLists.get(program_tokens[i]);
					if(!tokens[i+3].equals("0")){
						tempMeritList.putCandidate(tokens[0], tokens[i+3]);
						allRankLists.put(program_tokens[i], tempMeritList);
					}
				}
				for(int i=4;i<8;i++){
					MeritList tempMeritList = allRankLists.get(program_tokens[i]);
					if(!tokens[i+4].equals("0")){
						tempMeritList.putCandidate(tokens[0], tokens[i+4]);
						allRankLists.put(program_tokens[i], tempMeritList);
					}
				}
			}
		}
		catch(Exception e){
			e.printStackTrace();
		}
	}
	public static void iterate(){	
		int N = allCandidates.size();
		while(!end){
			for(int n=0;n<N;n++){
				Candidate candidate = allCandidates.get(n);
				if(candidate.getAllotedVP() != -1){
					VirtualProgramme virtual_programme = allVirtualPrograms.get(candidate.virtual_pl.get(candidate.getCurrentVP()));
					virtual_programme.addCandidateToAppliedList(candidate);
				}
				if(end=true){
					if(candidate.getCurrentVP()==candidate.virtual_pl.size()) end=true;
					else end=false;
				}
			}
		}
	}
	
}
